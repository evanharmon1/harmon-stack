# questions for Copier new project template
# Run it with: `copier copy path/to/repo path/to/destination/repo-name` E.g, `copier copy harmon-stack new-repo --trust`.

# Potential types: astro, astrowind, nextjs, t3, wdc, sst, python, fastapi, flask, django, dashboard, control panel, go, terraform, pulumi, automattion / pipeline, ansible, kestra, datascience, java

project_name:
  type: str
  help: "NAME: Formal name of the project (Project Name)"
  placeholder: "Formal Project Name"

project_slug:
  type: str
  help: "SLUG: Project slug (project-slug)"
  placeholder: "{{ project_name.lower().replace(' ', '-') }}"
  default: "{{ project_name.lower().replace(' ', '-') }}"

project_description:
  type: str
  help: "DESCRIPTION: Short description of the project"
  placeholder: "TODO: project_description"
  default: "TODO: project_description"

project_type:
  type: str
  help: "TYPE: Type of project?"
  choices:
    - code
    - project
    - business
    - documentation
    - other
  default: code

git_init:
  type: bool
  help: "INIT: Initialize git repo?"
  default: yes

git_provider:
  type: str
  help: "GIT PROVIDER: Git provider for the project"
  choices:
    - github
    - gitlab
    - other
    - none
  default: github

github_remote_create:
  type: bool
  help: "GITHUB REMOTE: Create a remote repo on GitHub? (gh repo create)"
  default: no

github_release_init:
  type: bool
  help: "RELEASE: Create an initial release on GitHub?"
  default: no

github_collaboration_templates:
  type: bool
  help: "COLLABORATION: Include GitHub Issue templates, CONTRIBUTING.md, and CODE_OF_CONDUCT.md files?"
  default: no

ci_cd:
  type: str
  help: "CI/CD: Add CI/CD files?"
  choices:
    - github_actions
    - none
    - gitlab_ci
  default: github_actions

license:
  type: str
  help: "LICENSE: Add license?"
  choices:
    - mit
    - private
  default: mit

bunch_add:
  type: bool
  help: "BUNCH: Add Bunch file to project?"
  default: yes

# Mostly default good defaults (Most Nos) below here vvv so usually just smash enter from here

obsidian_project_add:
  type: bool
  help: "OBSIDIAN: Add Obsidian project to Obsidian directory?"
  default: no

run_task_bootstrap:
  type: bool
  help: "TASK BOOTSTRAP: Run 'task bootstrap' command?"
  default: no

run_task_install:
  type: bool
  help: "TASK INSTALL: Run 'task install' command?"
  default: no

design_files:
  type: bool
  help: "DESIGN: Add design files (e.g. wireframe tools, architecture diagramming tools, etc.)?"
  default: no

code_templates:
  type: bool
  help: "CODE TEMPLATES: Add code templates? (scripts, web forms, automation, serverless functions, etc.)?"
  default: no

infra:
  type: str
  help: "INFRA: Add Infrastructure, hosting, cloud provider, deployment target, or IaC tools?"
  multiselect: true
  choices:
    - none
    - docker
    - terraform
    - pulumi
    - cloudformation
    - netlify
    - vercel
    - unraid
    - gcp
    - firebase
    - supabase
    - aws
    - do
    - azure
    - cloudflare
    - github_pages
    - cloudflare_pages
  default: none

observability:
  type: str
  help: "OBSERVABILITY: Add observability tools"
  multiselect: true
  choices:
    - none
    - uptime_kuma
    - healthcheck
  default: none

configuration_management:
  type: str
  help: "CONFIGURATION MANAGEMENT: Add Configuration management tool"
  choices:
    - none
    - ansible
  default: none

data_folder:
  type: bool
  help: "DATA: Add data folder?"
  default: no

devcontainer:
  type: bool
  help: ".DEVCONTAINER: Add .devcontainer?"
  default: no

ai_tool:
  type: str
  choices:
    - none
    - openai
    - anthropic
    - perplexity
    - gemini
    - cursor
  defult: none

author_first_name:
  type: str
  default: Evan

author_last_name:
  type: str
  default: Harmon

author_full_name:
  type: str
  placeholder: "{{ author_first_name + ' ' + author_last_name }}"
  default: "{{ author_first_name + ' ' + author_last_name }}"

author_email:
  type: str
  default: "evan@evanharmon.com"

author_url:
  type: str
  default: "https://evanharmon.com"

author_git_provider_username:
  type: str
  default: evanharmon1

organization:
  type: str
  default: "Harmon Ops"

organization_url:
  type: str
  default: "https://harmonops.com"

organization_email:
  type: str
  default: "evan@evanharmon.com"

repo_url:
  type: str
  default: "https://{{ git_provider }}.com/{{ author_git_provider_username }}/{{ project_slug }}"

project_url:
  type: str
  default: "TODO: project_url"

docker_hub_username:
  type: str
  default: evanharmon1

docker_image:
  type: str
  default: "TODO: docker_image"

# TODO: generate random color
project_color: "TODO: random_color"

# Paths TODO: How to not promput user for these?
projects_directory: ~/git
projects_directory_full: "/Users/{{ author_first_name }}/git"
bunches_directory: "/Users/evan/Library/Mobile Documents/com~apple~CloudDocs/Bunches"
obsidian_directory: "/Users/evan/Local/Memex"

# Demographics
country: United States
state: Kansas

# Date & Time
# year: "TODO: year"
# datestamp: "TODO: datestamp"
# timestamp: "TODO: timestamp"

# API Keys
# ai_tool_key:
#   when: false
#   secret: true
#   default: "TODO: ai_tool_key"

# opanapi_key:
#   when: false
#   secret: true
#   default: "TODO: opanapi_key"

# anthropic_key:
#   when: false
#   secret: true
#   default: "TODO: anthropic_key"

# perplexity_key:
#   when: false
#   secret: true
#   default: "TODO: perplexity_key"

# gemini_key:
#   when: false
#   secret: true
#   default: "TODO: gemini_key"

# cursor_key:
#   when: false
#   secret: true
#   default: "TODO: cursor_key"

_tasks:
  - command: git init
    when: "{{ git_init }}"
  - command: gh repo create
    when: "{{ github_remote_create }}"
  # - commands:
  #     - "git add -A"
  #     - "git commit -m 'Initial Release'"
  #     - "task gitInitRelease"
  #   when: "{{ github_release_init }}"
  - command: task bunchAdd
    when: "{{ bunch_add }}"
  - command: task obsidianProjectAdd
    when: "{{ obsidian_project_add }}"
  - command: echo "Harmon Stack project creation complete."

# Copier Settings

# Automatically use this directory as the root for the copier template
_subdirectory: template

# Automatically set any variables that contain password or key in copier.yml to be marked as secrets and not added to the .copier-answers.yml file
_secret_questions:
  - password
  - key
